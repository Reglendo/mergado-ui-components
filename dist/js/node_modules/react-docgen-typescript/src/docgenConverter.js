"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function convertToDocgen(doc) {
    var reactClasses = doc.classes.filter(function (i) { return i.extends === 'Component' || i.extends === 'React.Component'; });
    if (reactClasses.length === 0) {
        return null;
    }
    var comp = reactClasses[0];
    var reactInterfaces = doc.interfaces.filter(function (i) { return i.name === comp.propInterface; });
    if (reactInterfaces.length === 0) {
        return null;
    }
    var props = reactInterfaces[0];
    var defaultProps = doc.defaultProps;
    return {
        description: comp.comment,
        props: props.members.reduce(function (acc, i) {
            var item = {
                description: i.comment,
                type: { name: i.type },
                defaultValue: printDefaultValue(defaultProps, i.name, i.type),
                required: i.isRequired
            };
            if (i.values) {
                item.description = item.description + ' (one of the following:' + i.values.join(',') + ')';
            }
            acc[i.name] = item;
            return acc;
        }, {})
    };
}
exports.convertToDocgen = convertToDocgen;
function printDefaultValue(defaultProps, name, type) {
    var defaultValue = null;
    var value = defaultProps[name];
    if (defaultProps[name] !== undefined) {
        if (type === 'number') {
            defaultValue = defaultProps[name];
        }
        else if (type === 'string') {
            defaultValue = "“" + defaultProps[name] + "”";
        }
        else if (type === 'boolean') {
            defaultValue = defaultProps[name];
        }
        else {
            defaultValue = defaultProps[name];
        }
    }
    if (defaultValue !== null) {
        return { value: defaultValue, computed: false };
    }
    else {
        return null;
    }
}
exports.printDefaultValue = printDefaultValue;
//# sourceMappingURL=docgenConverter.js.map